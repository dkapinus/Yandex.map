{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/Yandex.map/src/enter-address/enter-address.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport clsx from 'clsx';\nimport s from 'src/enter-address/enter-address.module.css';\nimport { Map, Placemark, YMaps } from \"react-yandex-maps\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst center = [55.4424, 37.3636];\nexport const API_KEY = '2fb34dcc-abec-4a20-8c3b-2b663d3912ca';\nexport const EnterAddressForm = ({\n  onSendCoords\n}) => {\n  _s();\n  const [value, setValue] = useState('');\n  const [options, setOptions] = useState([]);\n  const [currentCoords, setCurrentCoords] = useState();\n  const [newCoords, setNewCoords] = useState([]);\n  const [currentAddress, setCurrentAddress] = useState('');\n  const classNames = {\n    autocomplete: clsx(s.autocomplete),\n    map: clsx(s.map),\n    submitButton: clsx(s.submitButton),\n    textField: clsx(s.textField)\n  };\n  useEffect(() => {\n    const fetchGeolocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          setCurrentCoords([latitude, longitude]);\n        }, error => {\n          console.log(error);\n        });\n      } else {\n        console.log('Geolocation is not supported by this browser.');\n      }\n    };\n    fetchGeolocation();\n  }, []);\n  useEffect(() => {\n    ;\n    (async () => {\n      try {\n        if (value) {\n          const res = await fetch(`https://geocode-maps.yandex.ru/1.x/?apikey=${API_KEY}&format=json&geocode=${value}`);\n          const data = await res.json();\n          const collection = data.response.GeoObjectCollection.featureMember.map(item => item.GeoObject);\n          setOptions(collection);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n  }, [value]);\n  useEffect(() => {\n    ;\n    (async () => {\n      try {\n        if (currentCoords) {\n          const res = await fetch(`https://geocode-maps.yandex.ru/1.x/?apikey=${API_KEY}&format=json&geocode=${currentCoords[1]},${currentCoords[0]}`);\n          const data = await res.json();\n          const collection = data.response.GeoObjectCollection.featureMember;\n          if (collection.length > 0) {\n            const firstItem = collection[0].GeoObject;\n            const address = firstItem.metaDataProperty.GeocoderMetaData.text;\n            setCurrentAddress(address);\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n  }, [currentCoords]);\n  const handleAutocompleteChange = (event, newValue) => {\n    if (typeof newValue === 'string') {\n      const obj = options.find(item => newValue.includes(item.name) && newValue.includes(item.description));\n      const coords = obj === null || obj === void 0 ? void 0 : obj.Point.pos.split(' ').map(item => Number(item)).reverse();\n      setCurrentCoords(coords);\n      setValue(newValue);\n    }\n  };\n  const handleInputChange = event => {\n    if (event) {\n      const enteredAddress = event.target.value;\n      setValue(enteredAddress);\n      (async () => {\n        try {\n          const res = await fetch(`https://geocode-maps.yandex.ru/1.x/?apikey=${API_KEY}&format=json&geocode=${enteredAddress}`);\n          const data = await res.json();\n          const collection = data.response.GeoObjectCollection.featureMember;\n          if (collection.length > 0) {\n            const firstItem = collection[0].GeoObject;\n            const coords = firstItem.Point.pos.split(' ').map(item => Number(item)).reverse();\n            setNewCoords(coords);\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      })();\n    }\n  };\n  const onKeyDownAutocomplete = e => {\n    if (e.key === 'Enter') {\n      setCurrentCoords(newCoords);\n    }\n  };\n  const onHandler = () => {\n    if (currentCoords && currentAddress) {\n      const data = {\n        currentAddress,\n        currentCoords\n      };\n      onSendCoords(data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(YMaps, {\n      query: {\n        apikey: API_KEY,\n        load: 'package.full'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        className: s.autocomplete,\n        filterOptions: x => x,\n        freeSolo: true,\n        onChange: handleAutocompleteChange,\n        onInputChange: handleInputChange,\n        onKeyDown: onKeyDownAutocomplete,\n        options: options.map(item => `${item.name} ${item.description}`),\n        renderInput: params => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u0412\\u0430\\u0448 \\u0438\\u043B\\u0438 \\u0431\\u043B\\u0438\\u0436\\u0430\\u0439\\u0448\\u0438\\u0439 \\u043A \\u0432\\u0430\\u043C \\u0430\\u0434\\u0440\\u0435\\u0441 \\u0433\\u0434\\u0435 \\u0432\\u044B \\u0438\\u0449\\u0435\\u0442\\u0435 \\u0441\\u0438\\u0434\\u0435\\u043B\\u043A\\u0443 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            className: classNames.textField,\n            label: 'Введите адрес'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this),\n        value: currentAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        className: classNames.map,\n        state: {\n          center: currentCoords || center,\n          zoom: 9\n        },\n        children: [currentCoords && /*#__PURE__*/_jsxDEV(Placemark, {\n          geometry: currentCoords,\n          options: {\n            preset: 'islands#redCircleDotIcon'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), newCoords.length > 0 && /*#__PURE__*/_jsxDEV(Placemark, {\n          geometry: newCoords,\n          options: {\n            preset: 'islands#blueCircleDotIcon'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classNames.submitButton,\n      disabled: currentCoords === undefined,\n      onClick: onHandler,\n      children: \"\\u0414\\u0430\\u043B\\u0435\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EnterAddressForm, \"nE8MDepPaUFeMAEmaEicIWIxL2A=\");\n_c = EnterAddressForm;\nvar _c;\n$RefreshReg$(_c, \"EnterAddressForm\");","map":{"version":3,"names":["React","useEffect","useState","Autocomplete","TextField","clsx","s","Map","Placemark","YMaps","jsxDEV","_jsxDEV","Fragment","_Fragment","center","API_KEY","EnterAddressForm","onSendCoords","_s","value","setValue","options","setOptions","currentCoords","setCurrentCoords","newCoords","setNewCoords","currentAddress","setCurrentAddress","classNames","autocomplete","map","submitButton","textField","fetchGeolocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","error","console","log","res","fetch","data","json","collection","response","GeoObjectCollection","featureMember","item","GeoObject","e","length","firstItem","address","metaDataProperty","GeocoderMetaData","text","handleAutocompleteChange","event","newValue","obj","find","includes","name","description","Point","pos","split","Number","reverse","handleInputChange","enteredAddress","target","onKeyDownAutocomplete","key","onHandler","children","query","apikey","load","className","filterOptions","x","freeSolo","onChange","onInputChange","onKeyDown","renderInput","params","fileName","_jsxFileName","lineNumber","columnNumber","label","state","zoom","geometry","preset","disabled","undefined","onClick","_c","$RefreshReg$"],"sources":["/Users/viktoriakapinus/Documents/Yandex.map/src/enter-address/enter-address.tsx"],"sourcesContent":["import React, { KeyboardEvent, SyntheticEvent, useEffect, useState } from 'react'\n\n\nimport {ApiResponse, FeatureMember, GeoObject} from './enter-address-types'\nimport Autocomplete from '@mui/material/Autocomplete'\nimport TextField from '@mui/material/TextField'\nimport clsx from 'clsx'\n\nimport s from 'src/enter-address/enter-address.module.css'\nimport {Map, Placemark, YMaps} from \"react-yandex-maps\";\n\nconst center = [55.4424, 37.3636]\n\nexport const API_KEY = '2fb34dcc-abec-4a20-8c3b-2b663d3912ca'\n\ntype dataType = {\n  currentAddress: string\n  currentCoords: number[]\n}\n\ntype Props = {\n  onSendCoords: (data: dataType) => void\n}\nexport const EnterAddressForm = ({ onSendCoords }: Props) => {\n  const [value, setValue] = useState<string>('')\n  const [options,setOptions] = useState<GeoObject[]>([])\n  const [currentCoords, setCurrentCoords] = useState<number[] | undefined>()\n  const [newCoords, setNewCoords] = useState<number[]>([])\n  const [currentAddress, setCurrentAddress] = useState<string>('')\n\n  const classNames = {\n    autocomplete: clsx(s.autocomplete),\n    map: clsx(s.map),\n    submitButton: clsx(s.submitButton),\n    textField: clsx(s.textField),\n  }\n\n  useEffect(() => {\n    const fetchGeolocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          position => {\n            const { latitude, longitude } = position.coords\n\n            setCurrentCoords([latitude, longitude])\n          },\n          error => {\n            console.log(error)\n          }\n        )\n      } else {\n        console.log('Geolocation is not supported by this browser.')\n      }\n    }\n\n    fetchGeolocation()\n  }, [])\n\n  useEffect(() => {\n    ;(async () => {\n      try {\n        if (value) {\n          const res = await fetch(\n              `https://geocode-maps.yandex.ru/1.x/?apikey=${API_KEY}&format=json&geocode=${value}`\n          )\n          const data = await res.json()\n          const collection = data.response.GeoObjectCollection.featureMember.map(\n              (item: FeatureMember) => item.GeoObject\n          )\n\n          setOptions(collection)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    })()\n  }, [value])\n\n\n  useEffect(() => {\n    ;(async () => {\n      try {\n        if (currentCoords) {\n          const res = await fetch(\n            `https://geocode-maps.yandex.ru/1.x/?apikey=${API_KEY}&format=json&geocode=${currentCoords[1]},${currentCoords[0]}`\n          )\n          const data: ApiResponse = await res.json()\n          const collection = data.response.GeoObjectCollection.featureMember\n\n          if (collection.length > 0) {\n            const firstItem = collection[0].GeoObject\n            const address = firstItem.metaDataProperty.GeocoderMetaData.text\n\n            setCurrentAddress(address)\n          }\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    })()\n  }, [currentCoords])\n\n  const handleAutocompleteChange = (\n    event: SyntheticEvent<Element, Event>,\n    newValue: null | string\n  ) => {\n    if (typeof newValue === 'string') {\n      const obj = options.find(\n        (item: any) => newValue.includes(item.name) && newValue.includes(item.description)\n      )\n      const coords = obj?.Point.pos\n        .split(' ')\n        .map((item: any) => Number(item))\n        .reverse()\n\n      setCurrentCoords(coords)\n      setValue(newValue)\n    }\n  }\n\n  const handleInputChange = (event: SyntheticEvent<Element, Event>) => {\n    if (event) {\n      const enteredAddress = (event.target as HTMLInputElement).value\n\n      setValue(enteredAddress)\n      ;(async () => {\n        try {\n          const res = await fetch(\n            `https://geocode-maps.yandex.ru/1.x/?apikey=${API_KEY}&format=json&geocode=${enteredAddress}`\n          )\n          const data: ApiResponse = await res.json()\n          const collection = data.response.GeoObjectCollection.featureMember\n\n          if (collection.length > 0) {\n            const firstItem = collection[0].GeoObject\n            const coords = firstItem.Point.pos\n              .split(' ')\n              .map((item: any) => Number(item))\n              .reverse()\n\n            setNewCoords(coords)\n          }\n        } catch (e) {\n          console.log(e)\n        }\n      })()\n    }\n  }\n\n  const onKeyDownAutocomplete = (e: KeyboardEvent<HTMLDivElement>) => {\n    if (e.key === 'Enter') {\n      setCurrentCoords(newCoords)\n    }\n  }\n\n  const onHandler = () => {\n    if (currentCoords && currentAddress) {\n      const data = { currentAddress, currentCoords }\n\n      onSendCoords(data)\n    }\n  }\n\n  return (\n    <>\n      <YMaps\n        query={{\n          apikey: API_KEY,\n          load: 'package.full',\n        }}\n      >\n        <Autocomplete\n          className={s.autocomplete}\n          filterOptions={x => x}\n          freeSolo\n          onChange={handleAutocompleteChange}\n          onInputChange={handleInputChange}\n          onKeyDown={onKeyDownAutocomplete}\n          options={options.map(item => `${item.name} ${item.description}`)}\n          renderInput={params => (\n            <div>\n              <div>Ваш или ближайший к вам адрес где вы ищете сиделку </div>\n              <TextField {...params} className={classNames.textField} label={'Введите адрес'} />\n            </div>\n          )}\n          value={currentAddress}\n        />\n        <Map\n          className={classNames.map}\n          state={{\n            center: currentCoords || center,\n            zoom: 9,\n          }}\n        >\n          {currentCoords && (\n            <Placemark geometry={currentCoords} options={{ preset: 'islands#redCircleDotIcon' }} />\n          )}\n          {newCoords.length > 0 && (\n            <Placemark geometry={newCoords} options={{ preset: 'islands#blueCircleDotIcon' }} />\n          )}\n        </Map>\n      </YMaps>\n      <button className={classNames.submitButton}\n        disabled={currentCoords === undefined}\n        onClick={onHandler}\n      >\n        Далее\n      </button>\n    </>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}